//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  @include container-fixed;
}

.container-table {
  @include display_table;
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  @include container-fixed;
}


.table-container {
  @include table_container;
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  @include make-row;
}

// Columns
//
// Common styles for small and large grid columns
@include make-grid-columns;

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@include make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: $screen-sm-min) {
  @include make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: $screen-md-min) {
  @include make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: $screen-lg-min) {
  @include make-grid(lg);
}

@function strip-units($val) {
  @return ($val / ($val * 0 + 1));
}

@mixin responsive_pinet_grid($args...) {
  	$grid-col-rs: $screen-width;
	@if type-of($alias_width) == number {
		$grid_sel: $grid-col-rs;
	}
	@else {
		$grid_sel: $grid-col-rs, $alias_width;
	}

	@for $i from 1 through $grid-columns {
		$grid-col-width: percentage(($i / $grid-columns));

		@each $sel in $grid_sel {
			.col-#{$sel}-#{$i} {
				float: left;
			  	min-height: 1px;
				width: $grid-col-width;
				padding-left: ($grid-gutter-width / 2);
			  	padding-right: ($grid-gutter-width / 2);
			  	position: relative;
			}

			.col-#{$sel}-offset-#{$i} {
				margin-left: $grid-col-width;
			}

			.col-#{$sel}-push-#{$i} {
				left: $grid-col-width;
			}

			.col-#{$sel}-pull-#{$i} {
				right: $grid-col-width;
			}

			.col-#{$sel}-#{$i}.col-center {
				left: (100% - $grid-col-width) / 2;
			}
		}
	}
}